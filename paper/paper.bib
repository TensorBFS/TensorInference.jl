@article{bezanson2017julia,
  title = {Julia: {A} {Fresh} {Approach} to {Numerical} {Computing}},
  volume = {59},
  issn = {0036-1445},
  shorttitle = {Julia},
  url = {https://epubs.siam.org/doi/abs/10.1137/141000671},
  doi = {10.1137/141000671},
  abstract = {Bridging cultures that have often been distant, Julia combines expertise from the diverse fields of computer science and computational science to create a new approach to numerical  computing. Julia is  designed to be easy and fast and questions notions generally held to be â€œlaws of nature"  by practitioners of numerical computing: {\textbackslash}beginlist {\textbackslash}item  High-level dynamic programs have to be slow. {\textbackslash}item  One must prototype in one language and then rewrite in another language for speed or deployment. {\textbackslash}item There are parts of a system appropriate for the programmer, and other parts that are best left untouched as they have been built by the experts. {\textbackslash}endlist We introduce the  Julia programming language and its design---a  dance between specialization and abstraction. Specialization allows for custom treatment. Multiple dispatch,  a  technique from computer science, picks  the right algorithm for the right circumstance. Abstraction, which is what good computation is really about, recognizes what remains the same after differences are stripped away. Abstractions in mathematics are captured as code through another technique from computer science, generic programming. Julia shows that  one can achieve machine performance without sacrificing human convenience.},
  number = {1},
  urldate = {2018-04-10},
  journal = {SIAM Review},
  author = {Bezanson, J. and Edelman, A. and Karpinski, S. and Shah, V.},
  month = jan,
  year = {2017},
  pages = {65--98},
  file = {Bezanson et al. - 2017 - Julia A Fresh Approach to Numerical Computing.pdf:/Users/apodusenko/Zotero/storage/GS7LQE5E/Bezanson et al. - 2017 - Julia A Fresh Approach to Numerical Computing.pdf:application/pdf;Snapshot:/Users/apodusenko/Zotero/storage/EI9VN2TA/141000671.html:text/html},
}

@article{bezanson2012julia,
  title = {Julia: {A} {Fast} {Dynamic} {Language} for {Technical} {Computing}},
  shorttitle = {Julia},
  url = {http://arxiv.org/abs/1209.5145},
  doi = {10.48550/arXiv.1209.5145},
  abstract = {Dynamic languages have become popular for scientific computing. They are generally considered highly productive, but lacking in performance. This paper presents Julia, a new dynamic language for technical computing, designed for performance from the beginning by adapting and extending modern programming language techniques. A design based on generic functions and a rich type system simultaneously enables an expressive programming model and successful type inference, leading to good performance for a wide range of programs. This makes it possible for much of the Julia library to be written in Julia itself, while also incorporating best-of-breed C and Fortran libraries.},
  urldate = {2018-11-27},
  journal = {arXiv:1209.5145 [cs]},
  author = {Bezanson, Jeff and Karpinski, Stefan and Shah, Viral B. and Edelman, Alan},
  month = sep,
  year = {2012},
  note = {arXiv: 1209.5145},
  keywords = {Computer Science - Programming Languages, Computer Science - Computational Engineering, Finance, and Science, D.3.2},
  file = {arXiv.org Snapshot:/Users/apodusenko/Zotero/storage/V6P4IU54/1209.html:text/html;Bezanson et al. - 2012 - Julia A Fast Dynamic Language for Technical Compu.pdf:/Users/apodusenko/Zotero/storage/4Q9THC8V/Bezanson et al. - 2012 - Julia A Fast Dynamic Language for Technical Compu.pdf:application/pdf},
}

@article{lauritzen1988local,
  title={Local computations with probabilities on graphical structures and their application to expert systems},
  author={Lauritzen, Steffen L and Spiegelhalter, David J},
  journal={Journal of the Royal Statistical Society: Series B (Methodological)},
  volume={50},
  number={2},
  pages={157--194},
  year={1988},
  publisher={Wiley Online Library}
}

# Tensor network contraction ordering methods

@misc{kalachev2022multitensor,
  title={Multi-Tensor Contraction for XEB Verification of Quantum Circuits}, 
  author={Gleb Kalachev and Pavel Panteleev and Man-Hong Yung},
  year={2022},
  eprint={2108.05665},
  archivePrefix={arXiv},
  primaryClass={quant-ph}
}

@article{gray2021hyper,
  title={Hyper-optimized tensor network contraction},
  volume={5},
  ISSN={2521-327X},
  url={http://dx.doi.org/10.22331/q-2021-03-15-410},
  DOI={10.22331/q-2021-03-15-410},
  journal={Quantum},
  publisher={Verein zur Forderung des Open Access Publizierens in den Quantenwissenschaften},
  author={Gray, Johnnie and Kourtis, Stefanos},
  year={2021},
  month={Mar},
  pages={410}
}

@misc{pan2021simulating,
  title={Simulating the Sycamore quantum supremacy circuits}, 
  author={Feng Pan and Pan Zhang},
  year={2021},
  eprint={2103.03074},
  archivePrefix={arXiv},
  primaryClass={quant-ph}
}

@misc{liu2022computing,
  doi = {10.48550/ARXIV.2205.03718},
  url = {https://arxiv.org/abs/2205.03718},
  author = {Liu, Jin Guo and Gao, Xun and Cain, Madelyn and Lukin, Mikhail D. and Wang, Sheng-Tao},
  keywords = {Statistical Mechanics (cond-mat.stat-mech), FOS: Physical sciences, FOS: Physical sciences},
  title = {Computing solution space properties of combinatorial optimization problems via generic tensor networks},
  publisher = {arXiv},
  year = {2022},
  copyright = {Creative Commons Attribution 4.0 International}
}
